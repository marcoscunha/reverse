#ifndef _HWETRACE_API_H_
#define _HWETRACE_API_H_

#include "events/hwe_events.h"

/*
 * Trace open and close
 * (optionnal call)
 */

// set name of trace default name is "trace"
void hwetrace_open  (const char *name);
// end of trace, equivalent to close all opened ports
void hwetrace_close (void);

/*
 * Ports
 */
typedef struct hwe_port_t hwe_port_t;

// close a port (when all ports are closed, the trace is automatically closed) 
void       hwe_port_close(hwe_port_t *port);
// get a new event from a port
hwe_cont * hwe_init (hwe_port_t *port);
// commit an event (the event pointer can't be used anymore)
void       hwe_commit (hwe_cont *hwe);
// cancel an event (the event pointer can't be used anymore)
void       hwe_cancel (hwe_cont *hwe);

/*
 * Open a device port to the trace
 *    + name      : not NULL
 *    + type      : type of the device
 *    + device    : description of the device
 * an INFO event is generated by this call
 */
extern hwe_port_t * hwe_port_open (const char *name, hwe_device_t type,
      const hwe_devices_u *dev);

// add a ref container to an event, use prudently
hwe_cont * hwe_extend (hwe_cont *hwe);

#endif /* _HWETRACE_API_H_ */

